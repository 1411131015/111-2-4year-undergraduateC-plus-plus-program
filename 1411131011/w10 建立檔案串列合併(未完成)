#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void blank(FILE *cfPtr); //空白 
void write(FILE *cfPtr); //寫入 
void read(FILE *cfPtr);  //讀取 


typedef struct {
    unsigned int StuNum;
    char Name[20];
    int math; 
    int computer;
    float average;
    int rank;
}stuData;

typedef struct stuData StuData; // synonym for struct listNode
typedef StuData *StuDataPtr; 

void insert(StuDataPtr *sPtr, unsigned int ID, char name[], int mat, int comp);
char delete(StuDataPtr *sPtr, unsigned int value);
int isEmpty(StuDataPtr sPtr);
void printList(StuDataPtr currentPtr);
void instructions(void);

int main(void){
    FILE *cfPtr;            // 建立檔案指標 
    blank(cfPtr);
    write(cfPtr);
    read(cfPtr);
    } 


void blank(FILE *cfPtr){
    int i;
    if((cfPtr = fopen("accounts1.dat","wb"))==NULL){     //開啟檔案 
        puts("File could not be opened.");
    }
    else{
        stuData blankstudent = {0,"",0,0,0.0,0};

        for(i = 1 ; i <= 100 ; i++){
            fwrite(&blankstudent, sizeof(stuData),1,cfPtr);   //存取檔案
        }
    }
    fclose(cfPtr);                                            //關閉檔案 
}

void write(FILE *cfPtr){
    if((cfPtr = fopen("accounts1.dat","rb+")) == NULL){      //開啟檔案 
        puts("File could not be opened.");
    }
    else{
         StuDataPtr startPtr = NULL;
         unsigned int StuID; // initially there are no nodes
         char Sname[20];
         int mat, comp; // char entered by user

         instructions(); // display the menu
         printf("%s", "? ");
         unsigned int choice; // user's choice
         scanf("%u", &choice);

   // loop while user does not choose 3
       { while (choice != 3) { 

           switch (choice) { 
                case 1:
                    printf("%s", "Enter a student ID: ");
                    scanf("\n%d", &StuID);
                    printf("%s", "Enter a student Name: ");
                    scanf("\n%s", Sname);
                    printf("%s", "Enter math: ");
                    scanf("\n%d", &mat);
                    printf("%s", "Enter computer: ");
                    scanf("\n%d", &comp);
                    insert(&startPtr, StuID, Sname, mat, comp); // insert item in list
                    printstu(startPtr);
                    break;
                case 2: // delete an element
            // if list is not empty
                    if (!isEmpty(startPtr)) { 
                      printf("%s", "Enter character to be deleted: ");
                      scanf("\n%d", &StuID);

               // if character is found, remove it
                      if (delete(&startPtr, StuID)) { // remove item
                        printf("%d deleted.\n", StuID);
                        printstu(startPtr);
                      } 
                      else {
                        printf("%d not found.\n\n", StuID);
                      } 
               } 
               else {
               puts("List is empty.\n");
               } 

               break;
            default:
               puts("Invalid choice.\n");
               instructions();
               break;
            } // end switch

            printf("%s", "? ");
            scanf("%u", &choice); 
	    }
        puts("End of run.");	
   
        fclose(cfPtr);                                                //關閉檔案 
        printf("\n");                      
     }
   }
/*
void read(FILE *cfPtr){
    
    stuData stuAvg[100];  //************************新增結構陣列 
    int i=0,j;
    if((cfPtr = fopen("accounts1.dat","rb")) == NULL){                  //開啟檔案
        puts("File could not be opened.");
    }
    else{
        printf("%-6s%-10s%-10s%-10s%-10s%-5s\n","Num","Name","math","computer","average","rank");

        while(!feof(cfPtr)){
            stuData student = {0,"",0,0,0.0};

            int result = fread(&student,sizeof(stuData),1,cfPtr);

            if(result != 0 && student.StuNum != 0 ){
                printf("%-6d%-10s%-10d%-10d%-10.2f\n",student.StuNum,student.Name,student.math,student.computer,student.average);
                stuAvg[i].StuNum=student.StuNum;
                strcpy(stuAvg[i].Name,student.Name);
                stuAvg[i].math=student.math;
                stuAvg[i].computer=student.computer;
                stuAvg[i].average=student.average;
                stuAvg[i].rank=student.rank;
                i++;
            }
        }
        fclose(cfPtr);
    }
    printf("\n");
    
    for(j=0;j<i;++j)
        printf("%-6d%-10s%-10d%-10d%-10.2f\n",stuAvg[j].StuNum,stuAvg[j].Name,stuAvg[j].math,stuAvg[j].computer,stuAvg[j].average);
    printf("\n");
    
*/
