// Fig. 17.2: Time.cpp
// Member-function definitions for class Time.
#include <iostream>
#include <iomanip>
#include <stdexcept> // for illegal_argument exception class
#include "Date.h" // include definition of class Time from Time.h

using namespace std;

// Time constructor initializes each data member to zero.
Date::Date() 
{ 
   year = month = day = 0; 
} // end Time constructor

// set new Time value using universal time
void Date::setDate( int y, int m, int d )
{
   // validate hour, minute and second
   if ( ( y >= 0 && y < 3000 ) && ( m >= 0 && m <= 12 ) && 
      ( d >= 0 && d <= 31 ) ) 
   {
      year = y;
      month = m;
      day = d;
   } // end if
   else
      throw invalid_argument( 
         "year, month and/or day was out of range" );
} // end function setTime

// print Time in universal-time format (HH:MM:SS)
void Date::printUniversal()
{
   cout << setfill( '0' ) << setw( 4 ) << year << "/" 
      << setw( 2 ) << month << "/" << setw( 2 ) << day<< " 西元 " <<endl;
} // end function printUniversal

// print Time in standard-time format (HH:MM:SS AM or PM)
void Date::printROC()
{
   cout << ( (year < 200 ) ? year : year-1911 ) << "/" 
      << setfill( '0' ) << setw( 2 ) << month << "/" << setw( 2 )
      << day << " 民國 " <<endl;
} // end function printStandard
