//請修改上學期第15週問題1的題目，改以結構儲存學生資料，並印出美觀的報表。
//建議解


#include <stdio.h>
#include <stdlib.h>

/* run this program using the console pauser or add your own getch, system("pause") or input loop */

//建議解

#include <stdio.h>
#define SIZE 4
#define STU 13
//int binarySearch(int b[], int searchKey, int low, int high);
//void sort(char** name, int a[][SIZE], int size);
struct student {
    char name[20];
    unsigned int stu_id;
    float math;                               //定義結構
    float computer;
    float avg;
};
//struct student stu,stu_class[10];
typedef struct student  STUDENT;
void bubble(STUDENT myStu[STU]);
// function main begins program execution
int main(void)
{
    int key, result = 0, i, j;
    // initialize a

               //宣告結構
    STUDENT stu, stu_class[STU] = { {"Alice",2,98,72,0},                    //結構存取
                        {"Danny",3,76,32,0},
                        {"Tom",6,98,67,0},
                        {"Nina",7,89,32,0},
                        {"May",8,98,55,0},
                        {"Tim",9,89,32,0},
                        {"Sindy",10,98,65,0},
                        {"Bob",11,99,32,0},
                        {"Steven",12,98,71,0},
                        {"Ellen",13,76,91,0},
                        {"Nicole",18,93,49,0},
                        {"Tan",19,67,82,0},
                        {"Jenny",20,66,98,0} };



    puts("Name ID items in original order");
    // output original array
    for (j = 0; j < STU; j++)
        stu_class[j].avg = (stu_class[j].math + stu_class[j].computer) / 2;

    for (j = 0; j < STU; j++)
    {
        printf("%28s", stu_class[j].name);
        printf(" %d", stu_class[j].stu_id);
        printf(" %.2f", stu_class[j].math);
        printf(" %.2f", stu_class[j].computer);
        printf(" %.2f", stu_class[j].avg);
        printf("\n");
    }





 

    // bubble sort                                         
    // loop to control number of passes                    

    bubble(stu_class);//呼叫排序副程式
    puts("\nData items in ascending order");

    for (j = 0; j < STU; j++)     //印出排序後的結構陣列內容
    {
        printf("%28s", stu_class[j].name);
        printf(" %d", stu_class[j].stu_id);
        printf(" %.2f", stu_class[j].math);
        printf(" %.2f", stu_class[j].computer);
        printf(" %.2f", stu_class[j].avg);
        printf("\n");
        
    }
    printf("\n");
    printf("中位數:%s %d %.2f %.2f %.2f", stu_class[int (STU/2)].name, stu_class[int(STU / 2)].stu_id, stu_class[int(STU / 2)].math, stu_class[int(STU / 2)].computer, stu_class[int(STU / 2)].avg);
    printf("\n");
}




void bubble(STUDENT myStu[STU])
{STUDENT temp_stu;
    int hold,pass,i;
    for (pass = 1; pass < STU; ++pass) {

        // loop to control number of comparisons per pass
        for (i = 0; i < STU - pass; ++i) {

            // compare adjacent elements and swap them if first
            // element is greater than second element
            if (myStu[i].avg < myStu[i + 1].avg) {
                temp_stu = myStu[i];
                myStu[i] = myStu[i + 1];
                myStu[i + 1] = temp_stu;
            }
        }
    }

}
