#include <stdio.h>

         
struct clientData {                              
   unsigned int id; 
   char name[15];   
   int math,computer; 
   double avg;    
};             
 
typedef struct clientData CLIENT;

int main(void) 
{ 
   FILE *cfPtr; 
	unsigned int i;
   
   if ((cfPtr = fopen("accounts.dat", "rb+")) == NULL) {    
      puts("File could not be opened.");				 
   } 
   else { 
      
	  
      CLIENT client = {0, "",0,0,0.0}, blankClient={0, "",0,0,0.0};
      
      
      
	  for (i = 1; i <= 100; ++i) {                                   
         fwrite(&blankClient, sizeof(struct clientData), 1, cfPtr);  
      }             
     
      
      
      
      
      
      printf("%s", "Enter id"
         " (1 to 100, 0 to end input): ");
      scanf("%d", &client.id);

      
      while (client.id != 0) { 
       
         printf("%s", "Enter name, math, computer: ");
        
         
         fscanf(stdin, "%14s%9d%9d", client.name, 
            &client.math, &client.computer);
		client.avg=(client.math+client.computer)/2;
         
         fseek(cfPtr, (client.id - 1) *               
            sizeof(struct clientData), SEEK_SET);         

                    
         fwrite(&client, sizeof(struct clientData), 1, cfPtr);
																		
        
         printf("%s", "Enter id: ");
         scanf("%d", &client.id);
      } 
      
    
      fclose(cfPtr); 
   } 
   
   
   
   
   
   
   
  
   if ((cfPtr = fopen("accounts.dat", "rb")) == NULL) {
      puts("File could not be opened.");
   } 
   else { 
      printf("%-6s%-12s%-8s%8s%15s\n", "id", "name",
         "math", "computer","average");

      
      while (!feof(cfPtr)) { 
         
         struct clientData client = {0, "",0,0,0.0};

         int result = fread(&client, sizeof(struct clientData), 1, cfPtr);

        
         if (client.id != 0) {   
            printf("%-6d%-12s%-10d%-10d%12.2f\n", 
               client.id, client.name, 
               client.math, client.computer,client.avg);
         } 
      } 

      fclose(cfPtr); 
   } 
   
   
   
   
   
   
} 
