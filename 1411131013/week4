#include <stdio.h>

void blank(FILE *cfPtr);
void write(FILE *cfPtr);
void read(FILE *cfPtr);

typedef struct{
	unsigned int StuNum;
	char Name[20];
	float average;
}stuData;

int i;

int main(void) {
	FILE *cfPtr = NULL;
	blank(cfPtr);
	write(cfPtr);
	read(cfPtr);
}

void blank(FILE *cfPtr){
	if((cfPtr = fopen("accounts.txt","wb"))==NULL){
		puts("File could not be opened.");
	}
	else{
		stuData blankstudent = {0,"",0.0};
		
		for(i=0 ; i<=100 ; i++){
			fwrite(&blankstudent,sizeof(stuData),1,cfPtr);
		}
	}
	fclose(cfPtr);
}
void write(FILE *cfPtr){
	if((cfPtr = fopen("accounts.txt","rb+"))==NULL){
		puts("File could not be opened.");
	}
	else{
		stuData student = {0,"",0.0};
		
		printf("%s","Enter studentNum(1 to 100, 0 to end input) : ");
		scanf("%d", &student.StuNum);
		
		while(student.StuNum != 0){
			printf("%s","\nEnter name , average : ");
			fscanf(stdin,"%19s%f",student.Name,&student.average);
			fseek(cfPtr,(student.StuNum-1)*sizeof(stuData),SEEK_SET);
			fwrite(&student,sizeof(stuData),1,cfPtr);
			printf("%s","\nEnter student number : ");
			scanf("%d",&student.StuNum);
		}
	}
	fclose(cfPtr);
}
void read(FILE *cfPtr){
	if((cfPtr = fopen("accounts.txt","rb"))==NULL){
		puts("File could not be opened.");
	}
	else{
		printf("%-6s%-16s%10s\n","Num","Name","average");
		
		while(!feof(cfPtr)){
			stuData student = {0,"",0.0};
			
			int result = fread(&student,sizeof(stuData),1,cfPtr);
			
			if(result !=0 && student.StuNum !=0 ){
				printf("%-6d%-19s%10.2f\n",student.StuNum,student.Name,student.average);
			}
		}
	fclose(cfPtr);
	}
}



// Writing data randomly to a random-access file
#include <stdio.h>

// clientData structure definition      
typedef struct

{         unsigned int StuNum;
          char Name[20];
          int math;
		  int computer;
          double average;
} stuData;         

int main(void) 
{ 
   FILE *cfPtr; // accounts.dat file pointer  1.建立(宣告)檔案指標
	unsigned int i;
   // fopen opens the file; exits if file cannot be opened
   if ((cfPtr = fopen("accounts.dat", "wb")) == NULL) {  //2.開啟檔案(利用fopen()函數) 
      puts("File could not be opened.");					// "w"=write(寫入)模式, "b"=binary(隨機存取檔) 
   } 
   
   
   if ((cfPtr = fopen("accounts.dat", "rb+")) == NULL) {   //2.開啟檔案(利用fopen()函數) 
      puts("File could not be opened.");					//// "r"=read(讀取)模式, "b"=binary(隨機存取檔) "+"修改檔案內容 
   } 
   else { 
      
	  // create clientData with default information
      stuData student = {0,"",0,0, 0.0}, blankClient={0,"",0,0, 0.0};
      
      
	  for (i = 1; i <= 100; ++i) {                                   
         fwrite(&blankClient, sizeof(stuData), 1, cfPtr);  //3.存取檔案 fwrite()將一筆(結構的)資料寫入檔案 
      }             // 每一筆紀錄佔37bytes,  檔案一共佔100x37=3700bytes ~4K bytes  
      // require user to specify account number
      
      
      
      
      printf("%s", "Enter account number"
         " (1 to 100, 0 to end input): ");
      scanf("%d", &student.StuNum);

      // user enters information, which is copied into file
      while (student.StuNum != 0) { 
         // user enters last name, first name and balance
         printf("%s", "Name,Math, Computer: ");
         
         // set record lastName, firstName and balance value
         fscanf(stdin, "%s %d %d",student.Name, &student.math, &student.computer);
         

         // seek position in file to user-specified record   
         fseek(cfPtr, (student.StuNum - 1) *               //移動檔案指標到目的地的記憶體位址上方   
            sizeof(stuData), SEEK_SET);         

         // write user-specified information in file              
         fwrite(&student, sizeof(stuData), 1, cfPtr);//3.存取檔案 fwrite()將一筆(結構的)資料寫入檔案
																		 // 每一筆紀錄佔37bytes
         // enable user to input another account number
         printf("%s", "Enter account number: ");
         scanf("%d", &student.StuNum);
      } 
      
    
      fclose(cfPtr); // fclose closes the file     4.關閉檔案  
   } 
   
   
   
   
   
   
   
   // fopen opens the file; exits if file cannot be opened
   if ((cfPtr = fopen("accounts.dat", "rb")) == NULL) {
      puts("File could not be opened.");
   } 
   else { 
      printf("%-6s%-6s%-16s%-11s%10s\n", "Acct","Name" ,"Math",
         "Computer", "Average");

      // read all records from file (until eof)
      while (!feof(cfPtr)) { 
         // create clientData with default information
         
         stuData student = {0,"",0,0, 0.0};

         int result = fread(&student, sizeof(stuData), 1, cfPtr);
         student.average = (student.math + student.computer)/2.0;

         // display record
         if (student.StuNum != 0) {   //印出讀取該筆(結構)資料的結果 
            printf("%-6d%-6s%-16d%-16d%10.2lf\n", 
               student.StuNum, student.Name,student.math, 
            student.computer, student.average);
         } 
      } 

      fclose(cfPtr); // fclose closes the file
   } 
   
} 
  
