
//建立一個可以讓使用者透過鍵盤輸入、設定以及印出寵物狗的名字及年齡的程式，但程式碼內需達成以下條件 :

//1. 要有設定、取得、列印的方法(函數)
//2.  設定(set)函數裡需判斷狗的年齡是否合理，狗的年齡介於0~20歲，條件須放在設定(set)函數裡)

// Define class GradeBook that contains a courseName data member
// and member functions to set and get its value; 
// Create and manipulate a GradeBook object with these functions.
#include <iostream>
#include <string> // program uses C++ standard string class
using namespace std;

// GradeBook class definition
class Pet
{
public:
    // function that sets the course name
    void setPetName(string name)
    {
        PetName = name; // store the course name in the object
    } // end function setCourseName

    // function that gets the course name
    void setPetAge(int age)
    {
        PetAge = age; // store the course name in the object
    }
    string getPetName() const
    {
        return PetName; // return the object's courseName  //私有資料成員courseName可以透過自家的函數存取
    } // end function getCourseName

    int getPetAge() const
    {
        return PetAge; // return the object's courseName  //私有資料成員courseName可以透過自家的函數存取
    } // end function getCourseName

    // function that displays a welcome message
    void displayMessage() const
    {
        // this statement calls getCourseName to get the 
        // name of the course this GradeBook represents
        cout << "pet name is  " << getPetName() << "!";
        cout << "pet age is  " << getPetAge() << "!"
            << endl;
    } // end function displayMessage
private:
    string PetName="unknown"; // course name for this GradeBook
    int PetAge=0;
}; // end class GradeBook  

// function main begins program execution
int main()
{
    string nameOfPet; // string of characters to store the course name
    int ageOfPet;
    Pet myPet; // create a GradeBook object named myGradeBook

    // display initial value of courseName
    cout << "Initial Pet name is: " << myPet.getPetName()
        << endl;
    cout << "Initial Pet age is: " << myPet.getPetAge()
        << endl;

    // prompt for, input and set course name
    cout << "\nPlease enter the Pet name:" << endl;
    getline(cin, nameOfPet); // read a course name with blanks

    cout << "\nPlease enter the Pet age:" << endl;
   cin>> ageOfPet; // read a course name with blanks

    myPet.setPetName(nameOfPet); // set the course name
    myPet.setPetAge(ageOfPet);
    cout << endl; // outputs a blank line
    myPet.displayMessage(); // display message with new course name
} // end main



// 執行程式: Ctrl + F5 或 [偵錯] > [啟動但不偵錯] 功能表
// 偵錯程式: F5 或 [偵錯] > [啟動偵錯] 功能表

// 開始使用的提示: 
//   1. 使用 [方案總管] 視窗，新增/管理檔案
//   2. 使用 [Team Explorer] 視窗，連線到原始檔控制
//   3. 使用 [輸出] 視窗，參閱組建輸出與其他訊息
//   4. 使用 [錯誤清單] 視窗，檢視錯誤
//   5. 前往 [專案] > [新增項目]，建立新的程式碼檔案，或是前往 [專案] > [新增現有項目]，將現有程式碼檔案新增至專案
//   6. 之後要再次開啟此專案時，請前往 [檔案] > [開啟] > [專案]，然後選取 .sln 檔案
