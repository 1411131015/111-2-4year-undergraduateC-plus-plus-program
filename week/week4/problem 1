建立一個結構，成員定義如下:

typedef struct

{        unsigned int StuNum;
          char Name[20];
          int math, computer;
          double average;

} stuData;

建立一個程式，存取隨機檔，功能如下:
1. 建立內容有100筆空白資料的隨機檔案(只需修改p.608的程式)
2. 程式寫入學生資料至檔案，直到輸入學號是0為止(p.610的程式)
3. 鍵盤輸入學號(stuNum)，利用fseek函數，移動檔案指標，將檔案內容全部印出。(p.613的程式)(或是將檔案內容全部印出也可以。)



建議解:

#include <stdio.h>

// clientData structure definition            
struct clientData {                              
   unsigned int acctNum; // account number
   char lastName[15]; // account last name    
   char firstName[10]; // account first name   
   double balance; // account balance      
}; 

int main(void)
{ 
   FILE *cfPtr; // accounts.dat file pointer =================>>>存取檔案的步驟一 
    unsigned int i;
   // fopen opens the file; exits if file cannot be opened
   if ((cfPtr = fopen("accounts.dat", "wb")) == NULL) {   //=======>>>存取檔案的步驟二 
      puts("File could not be opened.");
   } 
   else { 
      // create clientData with default information       
      struct clientData blankClient = {0, "", "", 0.0}; 
   
      // output 100 blank records to file                              
      for (i = 1; i <= 100; ++i) {                                   
         fwrite(&blankClient, sizeof(struct clientData), 1, cfPtr);//=======>>>存取檔案的步驟三
      }                                                      

      fclose (cfPtr); // fclose closes the file  //=======>>>存取檔案的步驟四 
   } 
} 
 

p.489 的程式 (寫入資料到隨機檔中)

#include <stdio.h>

// clientData structure definition               
struct clientData {                              
   unsigned int acctNum; // account number
   char lastName[15]; // account last name    
   char firstName[10]; // account first name   
   double balance; // account balance   
};             
 
int main(void) 
{ 
   FILE *cfPtr; // accounts.dat file pointer  =================>>>存取檔案的步驟一 

   // fopen opens the file; exits if file cannot be opened
   if ((cfPtr = fopen("accounts.dat", "rb+")) == NULL) {  //==========>>>存取檔案的步驟一
      puts("File could not be opened.");
   } 
   else { 
      // create clientData with default information
      struct clientData client = {0, "", "", 0.0};

      // require user to specify account number
      printf("%s", "Enter account number"
         " (1 to 100, 0 to end input): ");
      scanf("%d", &client.acctNum);

      // user enters information, which is copied into file
      while (client.acctNum != 0) { 
         // user enters last name, first name and balance
         printf("%s", "Enter lastname, firstname, balance: ");
        
         // set record lastName, firstName and balance value
         fscanf(stdin, "%14s%9s%lf", client.lastName, 
            client.firstName, &client.balance);

         // seek position in file to user-specified record   
         fseek(cfPtr, (client.acctNum - 1) *              
            sizeof(struct clientData), SEEK_SET);         

         // write user-specified information in file              
         fwrite(&client, sizeof(struct clientData), 1, cfPtr);

         // enable user to input another account number
         printf("%s", "Enter account number: ");
         scanf("%d", &client.acctNum);
      } 

      fclose(cfPtr); // fclose closes the file
   } 
} 
 

p.492的程式 (將資料讀取並列印)

// Fig. 11.14: fig11_14.c
// Reading a random-access file sequentially
#include <stdio.h>

// clientData structure definition               
struct clientData {                              
   unsigned int acctNum; // account number     
   char lastName[15]; // account last name     
   char firstName[10]; // account first name   
   double balance; // account balance            
};

int main(void)
{ 
   FILE *cfPtr; // accounts.dat file pointer     ==========>>>存取檔案的步驟一

   // fopen opens the file; exits if file cannot be opened
   if ((cfPtr = fopen("accounts.dat", "rb")) == NULL) {   //==========>>>存取檔案的步驟二 
      puts("File could not be opened.");
   } 
   else { 
      printf("%-6s%-16s%-11s%10s\n", "Acct", "Last Name",
         "First Name", "Balance");

      // read all records from file (until eof)
      while (!feof(cfPtr)) { 
         // create clientData with default information
         struct clientData client = {0, "", "", 0.0};

         int result = fread(&client, sizeof(struct clientData), 1, cfPtr); //==========>>>存取檔案的步驟三 

         // display record
         if (result != 0 && client.acctNum != 0) {
            printf("%-6d%-16s%-11s%10.2f\n", 
               client.acctNum, client.lastName, 
               client.firstName, client.balance);
         } 
      } 

      fclose(cfPtr); // fclose closes the file  //==========>>>存取檔案的步驟四  
   } 
} 
 
