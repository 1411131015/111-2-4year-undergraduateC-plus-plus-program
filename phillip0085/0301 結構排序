#include <stdio.h>
#define SIZE 4
#define STU 13


//void sort (char** name, int a[][SIZE], int size);

struct student {
    char name[20];
    unsigned int stu_id;
    float math;
    float computer;
    float avg;
};

//struct student stu,stu_class[10];
typedef struct student  STUDENT;

void bubble(STUDENT mystu[STU]);



// function main begins program execution
int main(void)
{
    int j;
    // initialize a


    STUDENT stu_class[STU] = { {"Alice",2,98,72,0},
                        {"Danny",3,76,32,0},
                        {"Tom",6,98,67,0},
                        {"Nina",7,89,32,0},
                        {"May",8,98,55,0},
                        {"Tim",9,89,32,0},
                        {"Sindy",10,98,65,0},
                        {"Bob",11,99,32,0},
                        {"Steven",12,98,71,0},
                        {"Ellen",13,76,91,0},
                        {"Nicole",18,93,49,0},
                        {"Tan",19,67,82,0},
                        {"Jenny",20,66,98,0} };




    // output original array
    for (j = 0; j < STU; j++)
        stu_class[j].avg = (stu_class[j].math + stu_class[j].computer) / 2;

    puts("Sort average ccore in original order:");
    for (j = 0; j < STU; j++)
    {
        printf("%28s", stu_class[j].name);
        printf(" %d", stu_class[j].stu_id);
        printf(" %.2f", stu_class[j].math);
        printf(" %.2f", stu_class[j].computer);
        printf(" %.2f", stu_class[j].avg);
        printf("\n");

    }

    bubble(stu_class);
    puts("Sort average ccore in descending order:");

    for (j = 0; j < STU; j++)
    {
        printf("%28s", stu_class[j].name);
        printf(" %d", stu_class[j].stu_id);
        printf(" %.2f", stu_class[j].math);
        printf(" %.2f", stu_class[j].computer);
        printf(" %.2f", stu_class[j].avg);
        printf("\n");
       
    } 

    printf("The median average score is: %.2f", stu_class[STU/2].avg);
}


void bubble(STUDENT mystu[STU])
{
    STUDENT t_stu;
    int hold, pass, i;
    for (pass = 1; pass < STU; ++pass) {

        for (i = 0; i < STU - pass; ++i) {
            if (mystu[i].avg < mystu[i + 1].avg) {
                t_stu = mystu[i];
                mystu[i] = mystu[i + 1];
                mystu[i + 1] = t_stu;
            }
        }
    }
}




/*    printf("\n");
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[1][i]);
    }
*/
// bubble sort                                         
// loop to control number of passes                    

/*    sort(name, a, stu);
    puts("\nData items in ascending order");

    for(j=0;j<stu;j++)
    {	printf("%8s", name[j]);
        for (i = 0; i < SIZE; ++i) {
            printf("%4d", a[j][i]);
        }
        printf("\n");
    }

}


void sort(char **name, int a[][SIZE], int size)
{char *ptr;
    int hold,pass,i;
    for (pass = 1; pass < size; ++pass) {

        // loop to control number of comparisons per pass
        for (i = 0; i < size - pass; ++i) {

            // compare adjacent elements and swap them if first
            // element is greater than second element
            if (a[i][3] < a[i + 1][3]) {
                ptr=name[i];
                name[i]=name[i+1];
                name[i+1]=ptr;
                swap(&a[i][0], &a[i+1][0]);
                swap(&a[i][1], &a[i+1][1]);
                swap(&a[i][2], &a[i+1][2]);
                swap(&a[i][3], &a[i+1][3]);
            }
        }
    }

}

void swap(int *e1Ptr,int *e2Ptr)
{int hold;
hold=*e1Ptr;
*e1Ptr=*e2Ptr;
*e2Ptr=hold;
}
*/
