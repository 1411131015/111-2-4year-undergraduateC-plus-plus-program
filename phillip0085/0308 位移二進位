#include <stdio.h>

void displayBits(unsigned int value); // prototype
void postBitsshift(int, int, int);



int main(void)
{
    unsigned int number, bits, dir;

    printf("Input a value:\n");
    scanf_s("%d", &number);
    printf("Shift how many bits:\n");
    scanf_s("%d", &bits);
    printf("Right:0 or Left:1\n");
    scanf_s("%d", &dir);

    postBitsshift(number, bits, dir);
    
}



void postBitsshift(int number, int bits, int dir)
{
    displayBits(number);
    if (dir == 0)
        displayBits(number = number >> bits);
    else
        displayBits(number = number << bits);

}



// display bits of an unsigned int value
void displayBits(unsigned int value)
{
    // declare displayMask and left shift 31 bits
    unsigned int c, displayMask = 1 << 31;

    printf("%10u = ", value);

    // loop through bits
    for (c = 1; c <= 32; ++c) {
        putchar(value & displayMask ? '1' : '0');
        value <<= 1; // shift value left by 1

        if (c % 8 == 0) { // output a space after 8 bits
            putchar(' ');
        }
    }

    putchar('\n');
}
