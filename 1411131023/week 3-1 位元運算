寫一個主程式及位元位移的副程式，使用三個參數:Value(被旋轉的變數值)、左旋或右旋的設定、bits(旋轉的位元數)，最後印出value位移前與位移後的二進位值。

#include <stdio.h>
void displayBits(unsigned int value);
void shiftbits(int, int, int);
int main()
{
    unsigned int number1 = 65535;
    unsigned int mask = 1,dir=0;
    puts("input num:");
    scanf_s("%d",& number1);
    puts("num of shifts:");
    scanf_s("%d", &mask);
    puts("right:0 left:otherwise:");
    scanf_s("%d", &dir);
    displayBits(number1);
    displayBits(mask);
    shiftbits(number1, mask, dir);

}
void shiftbits(int number1, int mask, int dir) {
    if (dir == 0) 
        displayBits(number1 >> mask);
    else
        displayBits(number1 << mask);
    
}
void displayBits(unsigned int value)
{
    // declare displayMask and left shift 31 bits
    unsigned int c, displayMask = 1 << 31;

    printf("%10u = ", value);

    // loop through bits
    for (c = 1; c <= 32; ++c) {
        putchar(value & displayMask ? '1' : '0');
        value <<= 1; // shift value left by 1

        if (c % 8 == 0) { // output a space after 8 bits
            putchar(' ');
        }
    }

    putchar('\n');
}
