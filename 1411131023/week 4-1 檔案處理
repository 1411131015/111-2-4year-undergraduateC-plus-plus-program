typedef struct

{        unsigned int StuNum;
          char Name[20];
          int math, computer;
          double average;

} stuData;

建立一個程式，存取隨機檔，功能如下:
1. 建立內容有100筆空白資料的隨機檔案(只需修改p.608的程式)
2. 程式寫入學生資料至檔案，直到輸入學號是0為止(p.610的程式)
3. 鍵盤輸入學號(stuNum)，利用fseek函數，移動檔案指標，將檔案內容全部印出。(p.613的程式)(或是將檔案內容全部印出也可以。)

#include <stdio.h>

// clientData structure definition            
struct stuData {
    unsigned int StuNum;
    char Name[20];
    int math, computer;
    double average;
};
typedef struct stuData STU;

int main(void)
{
    FILE* cfPtr;
    unsigned int i;
    // fopen opens the file; exits if file cannot be opened
    if ((cfPtr = fopen("accounts.dat", "wb")) == NULL) {
        puts("File could not be opened.");
    }
    else {
        // create clientData with default information       
        STU blankSTU = { 0, "",0,0, 0.0 };

        // output 100 blank records to file                              
        for (i = 1; i <= 100; ++i) {
            fwrite(&blankSTU, sizeof(STU), 1, cfPtr);
        }
        printf("Enter StuNum:");
        scanf_s("%u", &blankSTU.StuNum);
        while (blankSTU.StuNum != 0) {
            printf("%s", "Enter lastname, firstname, math, computer, average: ");
            scanf_s("%19s%d%d%lf", blankSTU.Name,
                &blankSTU.math, &blankSTU.computer, &blankSTU.average);
            fseek(cfPtr, (blankSTU.StuNum - 1) *
                sizeof(STU), SEEK_SET);
            fwrite(&blankSTU, sizeof(STU), 1, cfPtr);
            printf("%s", "Enter account number: ");
            scanf_s("%d", &blankSTU.StuNum);

            fseek(cfPtr, (blankSTU.StuNum - 1) *
                sizeof(STU), SEEK_SET);
            
            while (!feof(cfPtr)) {
                STU blankSTU = { 0, "",0,0, 0.0 };
                int result = fread(&blankSTU, sizeof(STU), 1, cfPtr);

                // display record
                if (result != 0 && blankSTU.StuNum != 0) {
                    printf("%-6d%-20s%-11d%-11d%-10.2f\n",
                        blankSTU.StuNum, blankSTU.Name,
                        blankSTU.math, blankSTU.computer, blankSTU.average);
                }
            }
        }
        fclose(cfPtr);
        
    }
}

